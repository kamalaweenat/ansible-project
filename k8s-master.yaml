---
- hosts: masters
  become: yes
  gather_facts: no
  vars:
    user: "{{ lookup('env','USER') }}"
    home: "{{ lookup('env','HOME') }}"
    
  tasks:
    - name: initialize the cluster
      shell: sudo kubeadm init --pod-network-cidr=10.244.0.0/16   
      ignore_errors: yes  
        
    - name: create .kube directory
      file:
        path: "{{ home }}/.kube"
        state: directory
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: 0755
        
    - name: change mode for admin.conf to read write
      file:
        path: /etc/kubernetes/admin.conf
        mode: o+r    

    - name: copy admin.conf to user kube config         
      copy:
        src: /etc/kubernetes/admin.conf
        remote_src: yes
        dest: "{{ home }}/.kube/config" 
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: '0644'

   
    - name: change owner of the config 
      shell: chown $(id -u):$(id -g) "{{ home }}"/.kube/config  
      
    - name: disable firewall service      
      shell: sudo ufw disable
        
    - name: Download kube-flannel.yml
      get_url:
        url: https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
        dest: "{{ home }}"
        mode: '0775'  
        
    - name: Get the network deviace name like- ens33
      shell: ifconfig -a | sed -E 's/[[:space:]:].*//;/^$/d' | grep ens*
      register: dev_name
        
    - name: add to ansible hosts file
      lineinfile:
        dest: "{{ home }}/kube-flannel.yml"
        insertafter: '- --kube-subnet-mgr'
        line: "        - --iface={{dev_name.stdout}}"     


    - name: Create Pod Network & RBAC. 
      become: yes
      become_user: "{{ lookup('env','USER') }}" 
      shell: |       
          kubectl apply -f {{ home }}/kube-flannel.yml
          kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/k8s-manifests/kube-flannel-rbac.yml

# pause
    - name: Get the token for joining the nodes with Kuberentes master.
      shell: kubeadm token create  --print-join-command
      register: kubernetes_join_command
    
    - debug:
        msg: "{{ kubernetes_join_command.stdout }}"        
        
    - name: Copy join command to local file.
      local_action: copy content="{{ kubernetes_join_command.stdout_lines[0] }}" dest="/tmp/kubernetes_join_command" mode=0777
   
      
  

